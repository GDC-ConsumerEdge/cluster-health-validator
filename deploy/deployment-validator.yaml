apiVersion: v1
kind: ConfigMap
metadata:
  name: health-check-config
  namespace: default
data:
  config.yaml: |
    platform_checks:
    - name: Node Health
      module: CheckNodes
    - name: Robin Cluster Health
      module: CheckRobinCluster
    - name: Root Sync Check
      module: CheckRootSyncs
    - name: VMRuntime Check
      module: CheckVMRuntime

    workload_checks:
    - name: VM Workloads Health
      module: CheckVirtualMachines
      parameters:
        namespace: vm-workloads
        count: 4
    - name: VM Data Volume Health
      module: CheckDataVolumes
      parameters:
        namespace: vm-workloads
        count: 4

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-health-validator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-health-validator
  template:
    metadata:
      labels:
        app: cluster-health-validator
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: cluster-health-validator
      restartPolicy: Always
      imagePullSecrets:
        - name: image-pull-secret
      containers:
      - name: cluster-health-validator
        image: gcr.io/cloud-alchemists-sandbox/kamek/cluster-health-validator:1.1.0
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8080
          name: gunicorn
        env:
        - name: LOG_LEVEL
          value: INFO
        - name: APP_CONFIG_PATH
          value: /config/config.yaml
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 15
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        configMap:
          name: health-check-config

---
apiVersion: v1
kind: Service
metadata:
  name: cluster-health-validator
  namespace: default
spec:
  selector:
    app: cluster-health-validator
  ports:
  - port: 8080
    targetPort: 8080
    name: gunicorn

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/robin_metrics"
    prometheus.io/port: "8080"
  name: robin-metric-scraper
  namespace: default
spec:
  selector:
    app: cluster-health-validator
  ports:
  - port: 8080
    targetPort: 8080
    name: gunicorn